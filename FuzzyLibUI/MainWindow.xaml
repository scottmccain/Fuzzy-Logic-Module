<Window x:Class="FuzzyLibUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:fuzzyLibUi="clr-namespace:FuzzyLibUI"
        xmlns:ae="clr-namespace:ICSharpCode.AvalonEdit.CodeCompletion;assembly=ICSharpCode.AvalonEdit"
        Title="MainWindow" Height="500" Width="725">

    <Window.Resources>

        <ControlTemplate x:Key="VerticalExpander" TargetType="{x:Type Expander}">
            <Border Name="ContentBorder"
                Width="0">
                <ContentPresenter />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded"
                     Value="True">
                    <Setter TargetName="ContentBorder"
                        Property="Width"
                        Value="Auto" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Color x:Key="BackgroundColor">#FF000000</Color>
        <Color x:Key="ForegroundColor">#FFFFFFFF</Color>

        <!--Avalon edit completion window style-->

        <Style x:Key="{x:Type ae:CompletionListBox }" TargetType="{x:Type ae:CompletionListBox}">

            <Setter Property="SnapsToDevicePixels" Value="true" />

            <!-- Foreground color -->

            <Setter Property="Foreground">

                <Setter.Value>

                    <SolidColorBrush Color="{DynamicResource  ForegroundColor }" />

                </Setter.Value>

            </Setter>

            <!-- Background color -->

            <Setter Property="Background">

                <Setter.Value>

                    <SolidColorBrush Color="{DynamicResource  BackgroundColor }"/>

                </Setter.Value>

            </Setter>

        </Style>

    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="15" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <ToolBar DockPanel.Dock="Top">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Image}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.30" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>
                <Button Click="OpenFileClick">
                    <Image Source="Images/Open.png" Height="16"/>
                </Button>
                <Button Click="SaveFileClick">
                    <Image Source="Images/Save.png" Height="16"/>
                </Button>
                <Separator/>
            </ToolBar>
            <TreeView>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type fuzzyLibUi:FuzzyModuleModel}" >
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Background="DarkCyan" Margin="2"  Text="{Binding Path=Name}"></TextBlock>
                            </StackPanel>
                            <TreeViewItem Header="Variables" ItemsSource="{Binding Variables}"></TreeViewItem>
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type fuzzyLibUi:FuzzyVariableModel}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Background="DarkBlue" Foreground="White" Margin="2" Text="{Binding Path=Name}"></TextBlock>
                            </StackPanel>
                            <TreeViewItem Header="Terms" ItemsSource="{Binding Terms}"></TreeViewItem>
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type fuzzyLibUi:FuzzyTermModel}" ItemsSource="{Binding Parameters}">
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Margin="2"  Text="{Binding Path=Name}"></TextBlock>
                            <TextBlock Margin="2">(</TextBlock>
                            <TextBlock Margin="2" Text="{Binding Path=Shape.Name}"></TextBlock>
                            <TextBlock Margin="2">)</TextBlock>
                        </StackPanel>

                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type fuzzyLibUi:FuzzyShapeModel}">
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Margin="2"  Text="{Binding Path=Name}"></TextBlock>
                            <TextBlock>(</TextBlock>
                            <TextBlock Margin="2"  Text="{Binding Path=Type}"></TextBlock>
                            <TextBlock>)</TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate  DataType="{x:Type fuzzyLibUi:FuzzyTermParameterModel}">
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Margin="2" Text="{Binding Path=Name}"></TextBlock>
                            <TextBlock Margin="2">-</TextBlock>
                            <TextBlock Margin="2" Text="{Binding Path=Value}"></TextBlock>
                        </StackPanel>

                    </HierarchicalDataTemplate>


                </TreeView.Resources>

                <TreeViewItem Header="Modules" ItemsSource="{Binding Path=Modules}">
                </TreeViewItem>
                <TreeViewItem Header="Shapes" ItemsSource="{Binding Path=Shapes}">
                </TreeViewItem>
            </TreeView>
        </DockPanel>
            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />
        <DockPanel Grid.Row="2">
            <ToolBar DockPanel.Dock="Top">
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Image}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.30" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>
                <Separator/>
                <Button Command="Cut">
                    <Image Source="Images/Cut.png" Height="16"/>
                </Button>
                <Button Command="Copy">
                    <Image Source="Images/Copy.png" Height="16"/>
                </Button>
                <Button Command="Paste">
                    <Image Source="Images/Paste.png" Height="16"/>
                </Button>
                <Button Command="Delete">
                    <Image Source="Images/Delete.png" Height="16"/>
                </Button>
                <Separator/>
                <Button Command="Undo">
                    <Image Source="Images/Undo.png" Height="16"/>
                </Button>
                <Button Command="Redo">
                    <Image Source="Images/Redo.png" Height="16"/>
                </Button>
                <Separator/>
                <CheckBox IsChecked="{Binding ElementName=textEditor,Path=WordWrap}">
                    <Image Source="Images/WordWrap.png" Height="16"/>
                </CheckBox>
                <CheckBox IsChecked="{Binding ElementName=textEditor,Path=ShowLineNumbers}">
                    <TextBlock Width="16" TextAlignment="Center">#</TextBlock>
                </CheckBox>
                <CheckBox IsChecked="{Binding ElementName=textEditor,Path=Options.ShowEndOfLine}">
                    <TextBlock Width="16" TextAlignment="Center">¶</TextBlock>
                </CheckBox>
            </ToolBar>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>
                <avalonedit:TextEditor
				Name="textEditor"
				FontFamily="Consolas"
				FontSize="10pt"
				SyntaxHighlighting="Custom Highlighting"
			></avalonedit:TextEditor>
                <GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Left"/>
                <DockPanel Grid.Column="1" Margin="4 0 0 0">
                    <WindowsFormsHost DockPanel.Dock="Right" Name="propertyGridHost">
                        <forms:PropertyGrid x:Name="propertyGrid"/>
                    </WindowsFormsHost>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
